---
const navItems = [
  { href: '/', text: 'Home' },
  { href: '/about/', text: 'About' },
  { href: '/projects/', text: 'Projects' },
  { href: '/off-duty/', text: 'Off Duty' },
  { href: '/stand/', text: 'What I Stand For' },
  { href: '/thoughts/', text: 'Thoughts' },
];
---

<header id="site-header" class="py-4 sticky top-0 z-40 bg-background/90 backdrop-blur-md shadow-sm border-b border-gray-200/20 header-slide-down">
  <nav class="container">
    <div class="flex items-center justify-between">
      <a href="/" class="group flex flex-col items-center">
        <div class="flex items-center">
          <span class="text-accent-orange opacity-70 group-hover:opacity-100 transition-opacity text-2xl font-bold">&#10100;</span>
          <span class="text-2xl font-display font-bold text-accent-cyan mx-1 group-hover:scale-105 transition-transform relative">
            Thisaru
            <span class="absolute inset-0 bg-accent-cyan/20 rounded-lg blur-md opacity-0 group-hover:opacity-100 transition-opacity duration-700 animate-pulse"></span>
          </span>
          <span class="text-accent-orange opacity-70 group-hover:opacity-100 transition-opacity text-2xl font-bold">&#10101;</span>
        </div>
        <span class="text-xs md:text-xs font-serif text-text-muted -mt-1 group-hover:text-accent-orange transition-colors text-center">
          <span class="inline-block group-hover:animate-pulse">â†’</span> Software, Sound, and the Stars
        </span>
      </a>
      <ul class="hidden md:flex space-x-8">
        {navItems.map((item, index) => (
          <li class="nav-item-fade-in" style={`animation-delay: ${index * 0.1}s;`}>
            <a
              href={item.href}
              class="text-text hover:text-accent-orange transition-all duration-300 font-medium header-nav-link relative hover:scale-105 focus-ring px-2 py-1 rounded"
            >
              {item.text}
            </a>
          </li>
        ))}
      </ul>
      <div class="flex items-center gap-4">
        <button
          id="theme-toggle"
          class="text-text hover:text-accent-cyan transition-all duration-300 text-2xl focus-ring hover:scale-110 hover:rotate-12 header-button-fade-in p-2 rounded-lg"
          style="animation-delay: 0.6s;"
          aria-label="Toggle dark/light theme"
          type="button"
        >
          <span id="theme-toggle-icon">
            {/* Icon will be set by script */}
          </span>
        </button>
        <button
          id="mobile-menu-open"
          class="md:hidden text-text hover:text-accent-orange transition-all duration-300 hover:scale-110 header-button-fade-in focus-ring p-2 rounded-lg"
          style="animation-delay: 0.7s;"
          aria-label="Open navigation menu"
          type="button"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-6 h-6"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
            />
          </svg>
        </button>
      </div>
    </div>
    {/* Mobile menu and backdrop, always rendered but hidden by default */}
    <div id="mobile-menu-backdrop" class="fixed inset-0 z-40 bg-black/40 backdrop-blur-sm md:hidden hidden"></div>
    <aside id="mobile-menu" class="fixed top-0 right-0 z-50 h-full w-64 bg-background/95 backdrop-blur-md border-l border-gray-200/20 shadow-lg flex flex-col p-8 gap-8 transition-transform duration-300 md:hidden translate-x-full">
      <button
        id="mobile-menu-close"
        class="self-end mb-8 text-2xl text-text hover:text-accent-orange focus:outline-none"
        aria-label="Close menu"
        type="button"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-7 h-7">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      <ul class="flex flex-col gap-6">
        {navItems.map((item) => (
          <li>
            <a
              href={item.href}
              class="mobile-nav-link text-xl font-medium text-text hover:text-accent-orange transition-colors"
            >
              {item.text}
            </a>
          </li>
        ))}
      </ul>
    </aside>
  </nav>
</header>

<script>
  // Theme toggle logic
  const html = document.documentElement;
  const themeToggle = document.getElementById('theme-toggle');
  const iconSpan = document.getElementById('theme-toggle-icon');
  const sun = '<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><circle cx="12" cy="12" r="5" stroke="currentColor" stroke-width="2"/><path stroke="currentColor" stroke-width="2" d="M12 1v2m0 18v2m11-11h-2M3 12H1m16.95 7.07l-1.41-1.41M6.34 6.34L4.93 4.93m12.02 0l-1.41 1.41M6.34 17.66l-1.41 1.41"/></svg>';
  const moon = '<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke="currentColor" stroke-width="2" d="M21 12.79A9 9 0 1111.21 3a7 7 0 109.79 9.79z"/></svg>';

  // @ts-ignore - Parameter type inference in client scripts
  function setTheme(dark) {
    if (dark) {
      html.classList.add('dark');
      localStorage.setItem('theme', 'dark');
      if (iconSpan) iconSpan.innerHTML = sun;
    } else {
      html.classList.remove('dark');
      localStorage.setItem('theme', 'light');
      if (iconSpan) iconSpan.innerHTML = moon;
    }
  }

  // Initial theme
  const userPref = localStorage.getItem('theme');
  const systemPref = window.matchMedia('(prefers-color-scheme: dark)').matches;
  setTheme(userPref === 'dark' || (!userPref && systemPref));

  themeToggle?.addEventListener('click', () => {
    setTheme(!html.classList.contains('dark'));
  });

  // Mobile menu logic
  const menuOpenBtn = document.getElementById('mobile-menu-open');
  const menuCloseBtn = document.getElementById('mobile-menu-close');
  const menu = document.getElementById('mobile-menu');
  const backdrop = document.getElementById('mobile-menu-backdrop');

  menuOpenBtn?.addEventListener('click', () => {
    menu?.classList.remove('translate-x-full');
    backdrop?.classList.remove('hidden');
    // Focus first menu link for accessibility
    const firstLink = menu?.querySelector('.mobile-nav-link');
    if (firstLink instanceof HTMLElement) {
      firstLink.focus();
    }
  });
  function closeMobileMenu() {
    menu?.classList.add('translate-x-full');
    backdrop?.classList.add('hidden');
    // Return focus to menu button for accessibility
    if (menuOpenBtn instanceof HTMLElement) {
      menuOpenBtn.focus();
    }
  }

  menuCloseBtn?.addEventListener('click', closeMobileMenu);
  backdrop?.addEventListener('click', closeMobileMenu);

  // Close mobile menu when clicking nav links
  const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');
  mobileNavLinks.forEach(link => {
    link.addEventListener('click', closeMobileMenu);
  });

  // Keyboard navigation for mobile menu
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !menu?.classList.contains('translate-x-full')) {
      closeMobileMenu();
    }
  });
</script>

<style>
  @keyframes gentle-pulse {
    0% { opacity: 0.7; }
    50% { opacity: 1; }
    100% { opacity: 0.7; }
  }

  @keyframes headerSlideDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes navItemFadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .header-slide-down {
    animation: headerSlideDown 0.6s ease-out;
  }

  .nav-item-fade-in {
    animation: navItemFadeIn 0.4s ease-out forwards;
    opacity: 0;
  }

  .header-button-fade-in {
    animation: navItemFadeIn 0.4s ease-out forwards;
    opacity: 0;
  }

  .animate-pulse {
    animation: gentle-pulse 2s infinite ease-in-out;
  }

  /* Add hover underline effect */
  .header-nav-link::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -4px;
    left: 0;
    background-color: var(--color-accent-orange);
    transition: width 0.3s ease;
    border-radius: 2px;
  }

  .header-nav-link:hover::after {
    width: 100%;
  }

  /* Accessibility: respect reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .header-slide-down,
    .nav-item-fade-in,
    .header-button-fade-in {
      animation: none;
      opacity: 1;
      transform: none;
    }
  }
</style>
