---
const navItems = [
  { href: '/', text: 'Home' },
  { href: '/projects/', text: 'Projects' },
  { href: '/off-duty/', text: 'Off Duty' },
  { href: '/causes/', text: 'What I Care About' },
  { href: '/thoughts/', text: 'Thoughts' },
];
---

<header class="py-6">
  <nav class="container">
    <div class="flex items-center justify-between">
      <a href="/" class="text-xl font-display font-bold text-accent-cyan">
        Thisaru
      </a>
      <ul class="hidden md:flex space-x-8">
        {navItems.map((item) => (
          <li>
            <a
              href={item.href}
              class="text-text hover:text-accent-orange transition-colors"
            >
              {item.text}
            </a>
          </li>
        ))}
      </ul>
      <div class="flex items-center gap-4">
        <button
          id="theme-toggle"
          class="text-text hover:text-accent-cyan transition-colors text-2xl focus:outline-none"
          aria-label="Toggle theme"
          type="button"
        >
          <span id="theme-toggle-icon">
            {/* Icon will be set by script */}
          </span>
        </button>
        <button
          id="mobile-menu-open"
          class="md:hidden text-text hover:text-accent-orange transition-colors"
          aria-label="Toggle menu"
          type="button"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-6 h-6"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
            />
          </svg>
        </button>
      </div>
    </div>
    {/* Mobile menu and backdrop, always rendered but hidden by default */}
    <div id="mobile-menu-backdrop" class="fixed inset-0 z-40 bg-black/40 backdrop-blur-sm md:hidden hidden"></div>
    <aside id="mobile-menu" class="fixed top-0 right-0 z-50 h-full w-64 bg-background shadow-lg flex flex-col p-8 gap-8 transition-transform duration-300 md:hidden translate-x-full">
      <button
        id="mobile-menu-close"
        class="self-end mb-8 text-2xl text-text hover:text-accent-orange focus:outline-none"
        aria-label="Close menu"
        type="button"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-7 h-7">
          <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
      <ul class="flex flex-col gap-6">
        {navItems.map((item) => (
          <li>
            <a
              href={item.href}
              class="text-xl font-medium text-text hover:text-accent-orange transition-colors"
              onclick="document.getElementById('mobile-menu').classList.add('translate-x-full');document.getElementById('mobile-menu-backdrop').classList.add('hidden');"
            >
              {item.text}
            </a>
          </li>
        ))}
      </ul>
    </aside>
  </nav>
</header>

<script>
  // Theme toggle logic
  const html = document.documentElement;
  const themeToggle = document.getElementById('theme-toggle');
  const iconSpan = document.getElementById('theme-toggle-icon');
  const sun = '<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><circle cx="12" cy="12" r="5" stroke="currentColor" stroke-width="2"/><path stroke="currentColor" stroke-width="2" d="M12 1v2m0 18v2m11-11h-2M3 12H1m16.95 7.07l-1.41-1.41M6.34 6.34L4.93 4.93m12.02 0l-1.41 1.41M6.34 17.66l-1.41 1.41"/></svg>';
  const moon = '<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke="currentColor" stroke-width="2" d="M21 12.79A9 9 0 1111.21 3a7 7 0 109.79 9.79z"/></svg>';

  function setTheme(dark) {
    if (dark) {
      html.classList.add('dark');
      localStorage.setItem('theme', 'dark');
      iconSpan.innerHTML = sun;
    } else {
      html.classList.remove('dark');
      localStorage.setItem('theme', 'light');
      iconSpan.innerHTML = moon;
    }
  }

  // Initial theme
  const userPref = localStorage.getItem('theme');
  const systemPref = window.matchMedia('(prefers-color-scheme: dark)').matches;
  setTheme(userPref === 'dark' || (!userPref && systemPref));

  themeToggle.addEventListener('click', () => {
    setTheme(!html.classList.contains('dark'));
  });

  // Mobile menu logic
  const menuOpenBtn = document.getElementById('mobile-menu-open');
  const menuCloseBtn = document.getElementById('mobile-menu-close');
  const menu = document.getElementById('mobile-menu');
  const backdrop = document.getElementById('mobile-menu-backdrop');

  menuOpenBtn.addEventListener('click', () => {
    menu.classList.remove('translate-x-full');
    backdrop.classList.remove('hidden');
  });
  menuCloseBtn.addEventListener('click', () => {
    menu.classList.add('translate-x-full');
    backdrop.classList.add('hidden');
  });
  backdrop.addEventListener('click', () => {
    menu.classList.add('translate-x-full');
    backdrop.classList.add('hidden');
  });
</script>
